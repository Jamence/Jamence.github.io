{"meta":{"title":"Jamence's blog","subtitle":"everything is funny when you are exploring","description":"Jamence的个人博客","author":"Jamence","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-02-25T08:11:31.432Z","updated":"2018-02-25T08:11:31.432Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"I am nobody with curiosity. Three virtue you should pay attention Laziness The quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful, and document what you wrote so you don’t have to answer so many questions about it. Hence, the first great virtue of a programmer, Also hence, this book. Impatience The anger you feel when the computer is being lazy. This makes you write programs that don’t just react to your needs, but actually anticipate them. Or at least pretend to. Hence, the second great virtue of a programmer. Hubris Excessive pride, the sort of thing Zeus zaps you for. Also the quality that makes you write (and maintain) programs that other people won’t want to say bad things about. Hence, the third great virtue of a programmer. 懒惰：是这样一种品质，它使得你花大力气去避免消耗过多的精力。它敦促你写出节省体力的程序，同时别人也能利用它们。为此你会写出完善的文档，以免别人问你太多问题。急躁：是这样一种愤怒——当你发现计算机懒洋洋地不给出结果。于是你写出更优秀的代码，能尽快真正的解决问题。至少看上去是这样。傲慢：极度的自信，使你有信心写出（或维护）别人挑不出毛病的程序。"}],"posts":[{"title":"c++继承方式","slug":"c-继承方式","date":"2018-02-25T07:36:58.000Z","updated":"2018-02-25T08:08:13.094Z","comments":true,"path":"2018/02/25/c-继承方式/","link":"","permalink":"http://yoursite.com/2018/02/25/c-继承方式/","excerpt":"","text":"c++继承（三种继承方式）三种继承方式 共有继承公有继承的特点是基类的公有成员和保护成员作为派生类的成员时，它们都保持原有的状态，而基类的私有成员仍然是私有的，不能被这个派生类的子类所访问。 私有继承私有继承的特点是基类的公有成员和保护成员都作为派生类的私有成员，并且不能被这个派生类的子类所访问。 保护继承保护继承的特点是基类的所有公有成员和保护成员都成为派生类的保护成员，并且只能被它的派生类成员函数或友元访问，基类的私有成员仍然是私有的。继承方式之间的关系 继承方式 基类的public成员 基类的protected成员 基类的private成员 public 成为public成员 成为protected成员 不可见 protected 成为protected成员 成为protected成员 不可见 private 成为private成员 成为private成员 不可见 注意事项 不管是哪种继承方式， 在派生类内部都可以访问基类的公有成员和保护成员 ， 基类的私有成员存在但是在子类中不可见（ 不能访问） 。 使用关键字class时默认的继承方式是private， 使用struct时默认的继承方式是public， 不过最好显式的写出继承方式。 在实际运用中一般使用都是public继承， 极少场景下才会使用protetced/private继承。 在struct继承中，如果没有显式给出继承类型，则默认的为public继承；在class继承中，如果没有显式给出继承类型，则默认的为private继承；简单总结三种类成员访问限定符 public（共有） protected（保护） private（私有）三种继承关系 public（共有继承） protected（保护继承） private(私有继承)","categories":[{"name":"Languages","slug":"Languages","permalink":"http://yoursite.com/categories/Languages/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-02-08T08:49:36.568Z","updated":"2018-02-25T08:09:44.759Z","comments":true,"path":"2018/02/08/hello-world/","link":"","permalink":"http://yoursite.com/2018/02/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Clean cache1$ hexo clean Generate static files1$ hexo generate More info: Generating Compress code using gulp1$ gulp More info: Gulp Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}